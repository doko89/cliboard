name: Build CLIBoard Binary

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: Build Binary
    strategy:
      matrix:
        goarch: [386, amd64, arm, arm64]
        goos: [linux]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Extract Version
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          if [[ "$GITHUB_REF" != refs/tags/v* ]]; then
            VERSION="dev"
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build Binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          mkdir -p dist
          BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          COMMIT_SHA=$(git rev-parse --short HEAD)
          go build -o dist/cliboard-${{ matrix.goos }}-${{ matrix.goarch }} \
            -ldflags "-X github.com/doko89/cliboard/cmd.Version=$VERSION -X github.com/doko89/cliboard/cmd.BuildDate=$BUILD_DATE -X github.com/doko89/cliboard/cmd.CommitSHA=$COMMIT_SHA" \
            main.go

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: cliboard-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/cliboard-${{ matrix.goos }}-${{ matrix.goarch }}

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/**
          body: "ðŸš€ New release for CLIBoard"
          draft: false
          prerelease: false
